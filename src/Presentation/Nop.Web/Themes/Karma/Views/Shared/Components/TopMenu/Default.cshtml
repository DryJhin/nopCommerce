@model TopMenuModel

@if (Model.DisplayHomepageMenuItem)
{
    <li class="nav-item">
        <a class="nav-link dropdown-toggle" href="@Url.RouteUrl("Homepage")">@T("Homepage")</a>
    </li>
}

@if (!Model.UseAjaxMenu)
{
    <li class="nav-item submenu dropdown">
        <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
           aria-expanded="false">Shop</a>
        <ul class="dropdown-menu">
            @{var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();}
            @foreach (var category in rootCategories)
            {
                var categoryLineModel = new TopMenuModel.CategoryLineModel
                {
                    Category = category
                };
                @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
            }
        </ul>
    </li>
}
@foreach (var topic in Model.Topics)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
}
@if (Model.NewProductsEnabled && Model.DisplayNewProductsMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
}
@if (Model.DisplayProductSearchMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
}
@if (Model.DisplayCustomerInfoMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
}
@if (Model.BlogEnabled && Model.DisplayBlogMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
}
@if (Model.ForumEnabled && Model.DisplayForumsMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
}
@if (Model.DisplayContactUsMenuItem)
{
    <li class="nav-item"><a class="nav-link dropdown-toggle" href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
}
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuAfter })
@{
    Layout = "_Root.Head";
}
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@await Html.PartialAsync("_Notifications")
@await Html.PartialAsync("_JavaScriptDisabledWarning")
@await Html.PartialAsync("_OldInternetExplorerWarning")
    <div class="master-wrapper-page">
        @await Component.InvokeAsync("AdminHeaderLinks")
        <!-- Start Header Area -->
        @await Html.PartialAsync("_Header")
        <!-- End Header Area -->
        <script asp-location="Footer">
        var localized_data = {
            AjaxCartFailure: "@T("AjaxCart.Failure")"
        };
        AjaxCart.init(false, '.nav-item .cart-qty', '.nav-item .wishlist-qty', '#flyout-cart', localized_data);
        </script>
        <!-- Start banner Area -->
        @if (IsSectionDefined("Breadcrumb"))
        {
            <section class="banner-area organic-breadcrumb">
                <div class="container">
                    <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
                        <div class="col-first">
                            @RenderSection("Breadcrumb")
                        </div>
                    </div>
                </div>
            </section>
        }
        else
        {
            @await Html.PartialAsync("_Banner")
        }
        <!-- End banner Area -->
        @*<div class="header-menu">
            @await Component.InvokeAsync("TopMenu")
        </div>*@
        <div class="master-wrapper-content">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentBefore })
            <div class="master-column-wrapper">
                @RenderBody()
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContentAfter })
        </div>
        @await Component.InvokeAsync("Footer")
    </div>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })

@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");
}

<!--product breadcrumb-->
@section Breadcrumb
{
    @Html.BuildBreadcrumbNavigation()
}

<section class="cart_area">
    <div class="container">
        <div class="cart_inner">
            @if (Model.Items.Count > 0)
            {
            <div class="wishlist-content">
                @if (Model.Warnings.Count > 0)
                    {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                                {
                        <li>@warning</li>
                                }
                    </ul>
                </div>
                    }
                <form asp-route="Wishlist" method="post">
                    <div class="table-responsiver">
                        <table class="table">
                            <thead>
                                <tr>
                                    @if (Model.IsEditable)
                                        {
                                    <th scope="col">
                                        @T("ShoppingCart.Remove")
                                    </th>
                                        }
                                    @if (Model.DisplayAddToCart)
                                        {
                                    <th scope="col">
                                        @T("ShoppingCart.AddToCart")
                                    </th>
                                        }
                                    @if (Model.ShowProductImages)
                                        {
                                    <th scope="col">
                                        @T("ShoppingCart.Image")
                                    </th>
                                        }
                                    <th scope="col">
                                        @T("ShoppingCart.Product(s)")
                                    </th>
                                    <th scope="col">
                                        @T("ShoppingCart.UnitPrice")
                                    </th>
                                    <th scope="col">
                                        @T("ShoppingCart.Quantity")
                                    </th>
                                    <th scope="col">
                                        @T("ShoppingCart.ItemTotal")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                    {
                                <tr>
                                    @if (Model.IsEditable)
                                            {
                                    <td class="remove-from-cart">
                                        <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                    </td>
                                            }
                                    @if (Model.DisplayAddToCart)
                                            {
                                    <td class="add-to-cart">
                                        <input type="checkbox" name="addtocart" value="@(item.Id)" />
                                    </td>
                                            }
                                    <div class="media">
                                        @if (Model.ShowProductImages)
                                                {
                                        <div class="d-flex">
                                            <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                        </div>
                                                }
                                        <div class="media-body">
                                            <p>
                                                <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name">@item.ProductName</a>
                                                @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                                        {
                                                <div class="attributes">
                                                    @Html.Raw(item.AttributeInfo)
                                                </div>
                                                        }
                                                @if (!string.IsNullOrEmpty(item.RecurringInfo))
                                                        {
                                                <div class="recurring-info">
                                                    @Html.Raw(item.RecurringInfo)
                                                </div>
                                                        }
                                                @if (!string.IsNullOrEmpty(item.RentalInfo))
                                                        {
                                                <div class="rental-info">
                                                    @Html.Raw(item.RentalInfo)
                                                </div>
                                                        }
                                                @if (Model.IsEditable && item.AllowItemEditing)
                                                        {
                                                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
                                                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                                                <div class="edit-item">
                                                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                                </div>
                                                        }
                                                @if (item.Warnings.Count > 0)
                                                        {
                                                <div class="message-error">
                                                    <ul class="ordered-list">
                                                        @foreach (var warning in item.Warnings)
                                                                    {
                                                        <li>@Html.Raw(warning)</li>
                                                                    }
                                                    </ul>
                                                </div>
                                                        }
                                            </p>
                                        </div>
                                    </div>
                                    <td class="unit-price">
                                        <h5>@item.UnitPrice</h5>
                                    </td>
                                    <td class="quantity">
                                        <div class="product_count">
                                            @if (Model.IsEditable)
                                                    {
                                                        if (item.AllowedQuantities.Count > 0)
                                                        {
                                            <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)">
                                                @foreach (var qty in item.AllowedQuantities)
                                                                {
                                                <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                                }
                                            </select>
                                                        }
                                                        else
                                                        {
                                            <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="input-text qty" />
                                                        }
                                                    }
                                                    else
                                                    {
                                            <h5>@item.Quantity</h5>
                                                    }
                                        </div>
                                    </td>
                                    <td class="subtotal">
                                        <h5>@item.SubTotal</h5>
                                        @if (!string.IsNullOrEmpty(item.Discount))
                                                {
                                        <div class="discount">
                                            @T("ShoppingCart.ItemYouSave", item.Discount)
                                        </div>
                                                    if (item.MaximumDiscountedQty.HasValue)
                                                    {
                                        <div class="discount-additional-info">
                                            @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                        </div>
                                                    }
                                                }
                                    </td>
                                </tr>
                                    }
                                <tr class="out_button_area">
                                    <td>
                                        @if (Model.IsEditable && Model.Items.Count > 0)
                                            {
                                                var wishlistUrl = Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, webHelper.CurrentRequestProtocol);
                                        <div class="share-info">
                                            <span class="share-label">@T("Wishlist.YourWishlistURL"):</span>
                                            <a href="@wishlistUrl" class="share-link">@wishlistUrl</a>
                                        </div>
                                            }
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                        <div class="checkout_btn_inner d-flex align-items-center">
                                            <div class="col">
                                                @if (Model.IsEditable)
                                                    {
                                                <input type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="button-2 update-wishlist-button" />
                                                    }
                                            </div>
                                            <div class="col">
                                                @if (Model.DisplayAddToCart)
                                                    {
                                                <input type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="button-2 wishlist-add-to-cart-button" />
                                                    }
                                            </div>
                                            <div class="col">
                                                @if (Model.IsEditable && Model.EmailWishlistEnabled)
                                                    {
                                                <input type="button" value="@T("Wishlist.EmailAFriend")" class="button-2 email-a-friend-wishlist-button" onclick="setLocation('@Url.RouteUrl("EmailWishlist")')" />
                                                    }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                        {
                            var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                            //of course, you can modify appropriate locales to include VAT info there
                    <div class="tax-shipping-info">
                        @T(inclTax ? "Wishlist.TaxShipping.InclTax" : "Wishlist.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </div>
                        }
                </form>
            </div>
            }
            else
            {
            <div class="no-data">
                @T("Wishlist.CartIsEmpty")
            </div>
            }
        </div>
    </div>
</section>